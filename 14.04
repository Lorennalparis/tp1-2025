<!DOCTYPE html>
<html lang="pt-BR">
<head>
  <meta charset="UTF-8">
  <h2>Calculadora simples com objetos (aritm√©tica)</h2>
</head>
<body>
  <input type="number" id="num1" placeholder="N√∫mero 1">
  <input type="number" id="num2" placeholder="N√∫mero 2">

  <br><br>
  <button onclick="calcular('+')">+</button>
  <button onclick="calcular('-')">-</button>
  <button onclick="calcular('*')">*</button>
  <button onclick="calcular('/')">/</button>
  <button onclick="calcular('^')">^</button>
  <button onclick="calcular('‚àö')">‚àö</button>

  <br><br>
  <button onclick="limpartexto()">Limpar</button>
  <button onclick="limparHistorico()">Limpar hist√≥rico</button>

  <p id="resultado">Aguardando valores...</p>

  <h3>Hist√≥rico de Opera√ß√µes:</h3>
  <ul id="historico"></ul>

  <script>
    const num1 = document.getElementById("num1");
    const num2 = document.getElementById("num2");
    const resultado = document.getElementById("resultado");
    const historico = document.getElementById("historico");

    let db;
    let operacoes = [];

    
    const request = indexedDB.open("CalculadoraDB", 1);

    request.onupgradeneeded = function (event) {
      db = event.target.result;
      const store = db.createObjectStore("operacoes", { keyPath: "id", autoIncrement: true });
      store.createIndex("operacao", "operacao", { unique: false });
    };

    request.onsuccess = function (event) {
      db = event.target.result;
      carregarOperacoes();
    };

    request.onerror = function () {
      console.error("Erro ao abrir o banco IndexedDB.");
    };

 
    function salvarOperacao(obj) {
      const tx = db.transaction(["operacoes"], "readwrite");
      const store = tx.objectStore("operacoes");
      store.add(obj);

      tx.oncomplete = () => carregarOperacoes();
    }

  
    function carregarOperacoes() {
      const tx = db.transaction(["operacoes"], "readonly");
      const store = tx.objectStore("operacoes");
      const request = store.getAll();

      request.onsuccess = function () {
        operacoes = request.result;
        atualizarHistorico();
      };
    }

 
    function removerOperacao(id) {
      const tx = db.transaction(["operacoes"], "readwrite");
      const store = tx.objectStore("operacoes");
      store.delete(id);

      tx.oncomplete = () => carregarOperacoes();
    }

    function limparHistorico() {
      const tx = db.transaction(["operacoes"], "readwrite");
      const store = tx.objectStore("operacoes");
      store.clear();

      tx.oncomplete = () => {
        operacoes = [];
        atualizarHistorico();
      };
    }

   
    function calcular(operacao) {
      const n1 = parseFloat(num1.value);
      const n2 = parseFloat(num2.value);

      if (isNaN(n1) || (isNaN(n2) && operacao !== '‚àö')) {
        resultado.textContent = "Por favor, digite os dois n√∫meros agora.";
        return;
      }

      let res;
      let textoConta;

      switch (operacao) {
        case '+':
          res = n1 + n2;
          textoConta = `${n1} + ${n2} = ${res}`;
          break;
        case '-':
          res = n1 - n2;
          textoConta = `${n1} - ${n2} = ${res}`;
          break;
        case '*':
          res = n1 * n2;
          textoConta = `${n1} √ó ${n2} = ${res}`;
          break;
        case '/':
          if (n2 === 0) {
            resultado.textContent = "Divis√£o por zero n√£o pode ser realizada.";
            return;
          }
          res = n1 / n2;
          textoConta = `${n1} √∑ ${n2} = ${res}`;
          break;
        case '^':
          res = Math.pow(n1, n2);
          textoConta = `${n1} ^ ${n2} = ${res}`;
          break;
        case '‚àö':
          res = Math.sqrt(n1);
          textoConta = `‚àö${n1} = ${res}`;
          break;
        default:
          return;
      }

      resultado.textContent = "Resultado do c√°lculo: " + textoConta;

      const obj = {
        operando1: isNaN(n1) ? null : n1,
        operando2: isNaN(n2) ? null : n2,
        operacao: operacao,
        resultado: res
      };

      salvarOperacao(obj);
    }

 
    function atualizarHistorico() {
      historico.innerHTML = "";

      operacoes.forEach((op) => {
        const li = document.createElement("li");
        let texto;

        if (op.operacao === '‚àö') {
          texto = `‚àö${op.operando1} = ${op.resultado}`;
        } else {
          const ope = op.operacao === '*' ? '√ó' :
                      op.operacao === '/' ? '√∑' :
                      op.operacao === '^' ? '^' :
                      op.operacao;
          texto = `${op.operando1} ${ope} ${op.operando2} = ${op.resultado}`;
        }

        li.textContent = texto + " ";

        const btnRemover = document.createElement("button");
        btnRemover.textContent = "üóë";
        btnRemover.onclick = () => removerOperacao(op.id);

        li.appendChild(btnRemover);
        historico.appendChild(li);
      });
    }

    function limpartexto() {
      num1.value = "";
      num2.value = "";
      resultado.textContent = "Aguardando os valores...";
    }
  </script>
</body>
</html>
